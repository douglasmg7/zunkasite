extends ../layout/layout_vue

block title
    title Admin - Produto

block append css
    link(rel="stylesheet" href="/css/admin/product.css?0002" charset="utf-8")

block content 
    section
        //- Store product id.
        label.mt0(for='storeProductId') Código produto Zunka
        input(type='text' id='storeProductId' v-model='product.storeProductId')
        //- EAN
        label(for='ean') EAN (European Article Number)
        input(type='text' id='ean' v-model='product.ean')
        p.validation(v-if='validation.ean') {{validation.ean}}
        //- Title.
        label(for='title') Título
        input(type='text' id='title' v-model='product.storeProductTitle')
        //- Dealer.
        label(for='dealer') Fornecedor   
        //- input(type='text' id='dealer' :disabled='product.dealerProductId' v-model='product.dealerName')   
        input(type='text' id='dealer' disabled=true v-model='product.dealerName')   
        //- Dealer product id.
        label(for='dealerProductId' v-if='product.dealerProductId') Código produto fornecedor   
        a#dealerProductId(v-if='product.dealerProductId' :href='`/ns/${product.dealerName.toLowerCase()}/product/${product.dealerProductId}`') {{product.dealerProductId}}
        //- input(type='text' id='dealerProductId' disabled v-model='product.dealerProductId' v-if='product.dealerProductId')   
        //- Categories.
        .category
            label(for='category') Categoria
            select(id='category' v-model='product.storeProductCategory')
                option(v-for='category in productCategories') {{category}}   
        //- Maker.
        .maker
            label(for='maker') Fabricante
            select(id='maker' v-model='product.storeProductMaker')
                option(v-for='maker in productMakers') {{maker}}                   
        //- Images.
        label Imagens 
        .images 
            .wrapper-image(v-for='image, index in product.images')
                img(:src='`/img/${product._id}/${image}`')
                .right-arrow(@click='moveImage(index, "r")')
                .left-arrow(@click='moveImage(index, "l")')
                p.delete-image(@click=`deleteImage(index)`) x             
        label.upload-image(for='uploadImage') Carregar imagem(s)
        input(type='file' id='uploadImage' accept='image/*' multiple v-on:change=`uploadImage()`)
        //- Detail.
        label(for='detail') Detalhes
        textarea(id='detail' rows='8' v-model='product.storeProductDetail')
        //- Info markdown.
        label(for='detail') Características
        textarea(id='detail' rows='8' v-model='product.storeProductInfoMD')
        //- Description.
        label(for='description') Descrição
        textarea(id='description' rows='8' v-model='product.storeProductDescription')
        //- Tech info.
        label(for='tecInfo') Detalhes técnicos
        textarea(id='tecInfo' rows='8' v-model='product.storeProductTechnicalInformation')
        //- Tech add.
        label(for='extraInfo') Informações adicionais
        textarea(id='extraInfo' rows='8' v-model='product.storeProductAdditionalInformation')     
        br
        //- Include warranty text.
        .warranty-markdown
            label(for='warranty') Garantia markdown
            select(id='warranty' v-model='product.warrantyMarkdownName')
                option(v-for='warranty in warranties') {{warranty}}   
        //- Include warranty text.
        input(type='checkbox' id='includeWarratyTextEnable'  v-model:checked='product.includeWarrantyText')
        label(for='includeWarratyTextEnable') Garantia (Incluir informação padrão)
        br
        //- Include additional information text.
        input(type='checkbox' id='includeOutletTextEnable'  v-model:checked='product.includeOutletText')
        label(for='includeOutletTextEnable') Outlet (Incluir informação padrão)
        //- Warranty.
        .warranty
            h2 Garantia
            hr
            //- Dealer.
            label.mt0(for='dealerWarrantyDays') Fornecedor (dias)
            input.input-integer(type='text' id='dealerWarrantyDays' v-model='product.dealerProductWarrantyDays')
            //- Shop.
            label(for='storeWarrantyDays') Loja (dias)
            input.input-integer(type='text' id='storeWarrantyDays' v-model='product.storeProductWarrantyDays')
            //- Observation.
            label(for='storeWarratyDetail') Observação
            input(type='text' id='storeWarratyDetail' v-model='product.storeProductWarrantyDetail')        
        //- Dimensions.
        .dimenssions
            h2 Dimensões
            hr
            //- Length.
            label.mt0(for='length') Comprimento (cm) 
            input.input-integer(type='text' id='length' v-model='product.storeProductLength')
            p.validation(v-if='validation.storeProductLength') {{validation.storeProductLength}}
            //- Wide.
            label(for='width') Largura (cm)
            input(type='text' id='width' v-model='product.storeProductWidth')        
            p.validation(v-if='validation.storeProductWidth') {{validation.storeProductWidth}}
            //- Heigh.
            label(for='height') Altura (cm)
            input.input-integer(type='text' id='height' v-model='product.storeProductHeight')
            p.validation(v-if='validation.storeProductHeight') {{validation.storeProductHeight}}
            //- Wheight
            label(for='weight') Peso (gramas)
            input(type='text' id='weight' v-model='product.storeProductWeight')        
            p.validation(v-if='validation.storeProductWeight') {{validation.storeProductWeight}}
        //- Price.
        .price
            h2 Preço
            hr
            //- Enable discount.
            input(type='checkbox' id='discountEnable' v-on:change='calcFinalPrice()', v-model:checked='product.storeProductDiscountEnable')
            label(for='discountEnable') Habilitar desconto
            br
            //- Dealer price.
            label(for='dealerPrice') Fornecedor (R$)
            //- input.input-money(type='text' id='dealerPrice' v-model='product.dealerProductPrice' v-on:input='calcFinalPrice()')
            input.input-money(type='text' id='dealerPrice' v-model='dealerProductPrice' v-on:input='calcFinalPrice()')
            p.validation(v-if='validation.dealerProductPrice') {{validation.dealerProductPrice}}
            //- Markup.
            label(for='markup') Lucro (%)
            //- input.input-money(type='text' id='markup' v-model='product.storeProductMarkup', v-on:input='calcFinalPrice()')
            input.input-money(type='text' id='markup' v-model='storeProductMarkupeBr', v-on:input='calcFinalPrice()')
            p.validation(v-if='validation.storeProductMarkup') {{validation.storeProductMarkup}}
            //- Discount config.
            label(for='discount') Desconto
            .discount
                //- Discount value.
                //- input.input-money(type='text' id='discount' v-model='product.storeProductDiscountValue', v-on:input='calcFinalPrice()')
                input.input-money(type='text' id='discount' v-model='storeProductDiscountValue', v-on:input='calcFinalPrice()')
                //- Discount mode.
                select(v-model='product.storeProductDiscountType' v-on:change='calcFinalPrice()')
                    option(value='%') %
                    option(value='R$') R$
            p.validation(v-if='validation.storeProductDiscountValue') {{validation.storeProductDiscountValue}}
            //- Final price.
            label(for='finalPrice') Valor final (R$)
            //- input(type='text' id='finalPrice', v-model='product.storeProductPrice', v-on:input='calcMarkup')
            input(type='text' id='finalPrice', v-model='storeProductPriceBr', v-on:input='calcMarkup')
        //- Meli product association
        //- .mercado-livre(v-if='product.storeProductCategory=="Notebooks"')
        //- .mercado-livre(v-if='this.meliCategoryId')
        .mercado-livre
            //- Not have product on mercado livre
            .no-have-ml-id(v-if='!this.product.mercadoLivreId && this.meliCategoryId')
                h2 Criar produto no Mercado Livre e vincular
                hr
                a(:href='`/meli/categories/${meliCategoryId}`') {{meliCategoryId}}
                label(v-for='attribute in meliCategoryAttributes' :for='attribute.name') {{attribute.name}} [{{attribute.id}}]
                    .has-values(v-if='attribute.values')
                        select(id='attribute.name' v-model='attribute.text')
                            option(v-for='value in attribute.values') {{value.name}}   
                    .no-values(v-if='!attribute.values')
                        input(type='text' :id='attribute.name' v-model='attribute.text')
                //- Commission.
                .commission
                    h3 Comissão
                    label
                        input(type='radio' id='Clássico' name='meliListingType' value='gold_special' v-model='meliListingType')
                        span Clássico
                    label
                        input(type='radio' id='Premium' name='meliListingType' value='gold_pro' v-model='meliListingType')
                        span Premium
                //- Create meli product.
                input.btn-success(type='button' v-on:click='createMeliProduct()' value='Criar produto no Mercado Livre')

                // Link to a meli product.
                h2 Vincular a um produto existente do Mercado Livre
                hr
                label(for='meli-product-id-to-link') Mercado Livre Id do produto
                input(type='text' id='meli-product-id-to-link' v-model='meliProductIdToLink')
                //- Link to meli product.
                input.btn-success(type='button' v-on:click='linkToMeliProduct()' value='Vincular ao produto do Mercado Livre')
            //- Have product on mercado livre
            .have-ml-id(v-if='this.product.mercadoLivreId')
                h2 Mercado Livre
                hr
                a(href=`https://api.mercadolibre.com/items/${product.mercadoLivreId}`) {{ product.mercadoLivreId }} - {{meliProduct.status }}
                br
                //- a(v-if='this.meliProduct.permalink' :href='this.meliProduct.permalink') a - {{ this.meliProduct.permalink }}
                a(:href='this.meliProduct.permalink') {{ this.meliProduct.permalink }}
                //- a(href=`https://api.mercadolibre.com/items/${product.mercadoLivreId}`) https://api.mercadolibre.com/items/{{ product.mercadoLivreId }}
                input.btn-info(v-if='this.meliProduct.status=="active"' type='button' v-on:click='updateMeliProduct("paused")' value='Pausar')
                input.btn-success(v-if='this.meliProduct.status=="paused"' type='button' v-on:click='updateMeliProduct("active")' value='Ativar')
                input.btn-danger(v-if='this.meliProduct.status=="paused"' type='button' v-on:click='updateMeliProduct("closed")' value='Encerrar')
                input.btn-danger(v-if='this.meliProduct.status=="closed"' type='button' v-on:click='updateMeliProduct("deleted")' value='Apagar')
        .status
            h2 Status
            hr
            //- Dealer product activation.
            p.success-message(v-if='this.product.dealerProductActive') Ativo no fornecedor
            p.warn-message(v-if='!this.product.dealerProductActive')  Inativo no fornecedor

            //- input(type='checkbox' id='commercialize' v-model:checked='product.storeProductCommercialize' :disabled='!isProductActive')
            //- label(for='commercialize') Comercializar produto
            //- input(type='checkbox' id='active' v-model:checked='product.storeProductActive' :disabled='!isProductActive')
            input(type='checkbox' id='active' v-model:checked='product.storeProductActive')
            label(for='active') Produto ativo
            br
            //- input(type='checkbox' id='marketZoom' v-model:checked='product.marketZoom' :disabled='!product.storeProductCommercialize')
            input(type='checkbox' id='marketZoom' v-model:checked='product.marketZoom')
            label(for='marketZoom') Incluir na ZOOM 
            //- Store product commercialize.
            p.mt0.success-message(v-if='this.product.storeProductCommercialize') Selecionado para venda (automático)
            p.mt0.warn-message(v-if='!this.product.storeProductCommercialize') Não selecionado para venda (automático)

            //- Stock quantity.
            label(for='stock') Estoque (Unidade)
            //- input(type='text' id='stock' v-model='product.storeProductQtd')
            input(type='text' id='stock' v-model='product.storeProductQtd' :disabled='product.dealerName=="Allnations"')

            p.validation(v-if='validation.storeProductQtd') {{validation.storeProductQtd}}
            //- Stock origin.
            .stock-location(v-if='product.dealerProductLocation')
                label(for='stock-origin') Localização
                input(type='text' id='stock-origin' v-model='product.dealerProductLocation' disabled)
            //- Display priority.
            label(for='display-priority' :class='{ error: validation.displayPriority }') Prioridade de exibição {{ validation.displayPriority }}
            input(type='text' id='display-priority' v-model='product.displayPriority')
            //- Changed at.
            //- p updatedAt: {{ product.updatedAt }}
            label(for='edited-at') Última edição
            input(type='text' id='edited-at' v-model='product.editedAt' disabled)
            input.btn-info(type='button' v-on:click='updateEditedAt()' value='Atualizar data da edição')
        .buttons
            if user.email!='douglasmg7@gmail.com'
                input.btn-success(type='button' v-on:click='saveProduct()' value='Salvar e voltar')
                input.btn-success(type='button' v-on:click='saveProduct(`/product/${product._id}`)' value='Salvar e ver produto')

            if user.email=='douglasmg7@gmail.com'
                input.btn-success(type='button' v-on:click='saveProduct(`stay`)' :value='buttonSaveValue')
                a(:href='`/product/${product._id}`') Visualizar o produto no site

            input.btn-exit(type='button' onclick='window.location.href="/admin"' value='Sair') 
            input.btn-danger(type='button' v-on:click='deleteProduct()' value='Apagar') 

block footer
  
append internal_scripts
    script.
        let product = !{JSON.stringify(product)};
        let productMakers = !{JSON.stringify(productMakers)};
        let productCategories = !{JSON.stringify(productCategories)};
        let warranties = !{JSON.stringify(warranties)};
        let user = !{JSON.stringify(user)}; 

append external_scripts
    script(src='/js/admin/product.js?0006')